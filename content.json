{"pages":[],"posts":[{"title":"Swift编译过程","text":"不积跬步无以至千里 LLVMLLVM是构架编译器(compiler)的框架系统，以C++编写而成，用于优化以任意程序语言编写的程序的编译时间(compile-time)、链接时间(link-time)、运行时间(run-time)以及空闲时间(idle-time)。 LLVMIRLLVM中间层表示 ClangClang是一个由Apple主导编写，基于LLVM的C/C++/Objective-C轻量编译器 swiftc的命令行 swiftc -o main.out main.swift 编译成可执行文件 Swift Abstract Syntax Tree(AST) swiftc main.swift -dump-ast 生成抽象语法树 Swift Intermediate Language(SIL) swiftc main.swift -emit-sil 生成swift中间语言 LLVM Intermediate Representation(LLVM IR) swiftc main.swift -emit-ir 生成LLVM中间表示层数据 Assembly Language swiftc main.swift -emit-assembly 生成汇编语言","link":"/2019/12/12/Swift%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/"},{"title":"mysql性能优化（内部培训笔记）","text":"mysql性能优化方案存储引擎InnoDB：事务安全、行级锁定、主键索引、支持外键（5.7版本的默认存储引擎，推荐） CSV：表格 Archive：日志系统、历史数据、大量的设备数据采集 Memory：redis，查找热度比较高的数据 MyISAM:5.5以前的默认版本 Federated:分布式、远程获取数据（远程表） 索引排序，随机io变有序io 适合大中型表 MySQL中使用的是B+Tree：所有数据存在叶子节点，左闭合 优化建议：索引列的数据长度能少则少；不一定越多越好；覆盖索引，少用select *；列的离散性要好 explain 执行计划 锁","link":"/2019/12/11/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%EF%BC%88%E5%86%85%E9%83%A8%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B0%EF%BC%89/"},{"title":"开篇","text":"长风破浪会有时，只怪云帆济沧海 自己本人卢希强，别名小希，28岁，居住在武汉，一个2015年毕业的软件开发工程师，四年多时间沉心工作，职业搬砖，知识零碎，回头皆空。兴趣爱好广泛，一切运动、唱歌、游戏……无奈时间不允许。回归近三十年人生路，波澜不惊，平平淡淡，车房都有，即将结婚。特开博客记录生活工作点滴。 生活 不求大富大贵，但求平安风顺 结婚在即，奔三冲刺，平平安安才是真。 工作 Stay hungry, stay foolish 专职于iOS开发，四年半开发经验，工作之余接触关于web端的相关知识。感觉技术日新月异，不往前便落后，所以坚持学习、坚持笔记、坚持coding吧。 目标 先定个小目标，赚他个一个亿？ 1、学习flutter,copy一个完整的公司项目； 2、减肥30斤； 3、学习SwiftUI、vue等； 4、每月一本书； 5、赚钱赚钱。 最后 会当凌绝顶，一览众山喜爱 祝自己工作顺利，升职加薪，生活幸福，股市长虹！ 2020为了生活，冲鸭！","link":"/2019/12/02/%E5%BC%80%E7%AF%87/"},{"title":"舒适终端","text":"iTerm2 + Oh My Zsh自定义终端（Mac） homebrew、Xcode、git、iterm2、zsh Step1 下载iTerm2下载地址：https://www.iterm2.com/ 老版本MacOS需手动切换zsh，执行以下命令 1chsh -s /bin/zsh 如果想切回bash，执行以下命令 1chsh -s /bin/bash Step2 安装Oh My Zshcurl安装 1# curl 安装方式2sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" wget安装 1# wget 安装方式2sh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" 地址：https://github.com/robbyrussell/oh-my-zsh Step3 安装PowerLine首先安装pip，已经安装的跳过 1sudo easy_install pip 安装powerline 1pip install powerline-status --user Step3 选择字体和配色iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Text自行选择 Step4 选择主题下载agnoster主题 1cd ~/Desktop/OpenSource2git clone https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor.git3cd oh-my-zsh-agnoster-fcamblor/4./install 打开zshrc配置文件，将ZSH_THEME后面的字段改为”agnoster” 1oepn ~/.zshrc 修改完成后，执行配置 1source ~/.zshrc Step5 安装高亮插件1cd ~/.oh-my-zsh/custom/plugins/2git clone https://github.com/zsh-users/zsh-syntax-highlighting.git3open ~/.zshrc 这时我们再次打开zshrc文件进行编辑。找到plugins，此时plugins中应该已经有了git，我们需要把高亮插件也加上： 请务必保证插件顺序，zsh-syntax-highlighting必须在最后一个。 然后在文件的最后一行添加：source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 执行命令使刚才的修改生效： 1source ~/.zshrc 最后愉快的去使用吧！","link":"/2019/12/24/%E8%88%92%E9%80%82%E7%BB%88%E7%AB%AF/"}],"tags":[],"categories":[]}